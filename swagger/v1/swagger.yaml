---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/motorcycles":
    get:
      summary: list motorcycles
      responses:
        '200':
          description: successful
    post:
      summary: create motorcycle
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bike_name:
                  type: string
                details:
                  type: string
                amount:
                  type: number
                  default: 30
                image:
                  type: string
                user_id:
                  type: integer
                  default: 1
              required:
              - bike_name
              - details
              - amount
              - image
              - user_id
  "/api/motorcycles/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show motorcycle
      responses:
        '200':
          description: successful
    delete:
      summary: delete motorcycle
      responses:
        '200':
          description: successful
  "/api/rentals":
    get:
      summary: list rentals
      responses:
        '200':
          description: successful
    post:
      summary: create rental
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                book_date:
                  type: string
                return_date:
                  type: string
                city:
                  type: string
                motorcycle_id:
                  type: string
                  default: 1
                user_id:
                  type: string
                  default: 1
              required:
              - book_date
              - return_date
              - city
              - user_id
              - motorcycle_id
  "/api/rentals/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    delete:
      summary: delete rental
      responses:
        '200':
          description: successful
  "/api/user-data":
    get:
      summary: show user
      responses:
        '200':
          description: successful
  "/users":
    post:
      summary: create registration
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      required: true
                    email:
                      type: string
                      required: true
                    password:
                      type: string
                      required: true
                    confirm_password:
                      type: string
                      required: true
                    date_of_birth:
                      type: string
                      required: true
  "/users/sign_in":
    post:
      summary: create session
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      required: true
                    password:
                      type: string
                      required: true
  "/users/sign_out":
    delete:
      summary: destroy session
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
